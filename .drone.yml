---
kind: pipeline
type: docker
name: pull_request

steps:
  - name: build
    image: node:14-alpine
    commands:
      - npm install
      - npm run build
  - name: lint
    image: node:14-alpine
    commands:
      - npm run lint
    depends_on:
      - build

trigger:
  branch:
    - main
  event:
    - pull_request

---
kind: pipeline
type: docker
name: deploy

steps:
  - name: build-prod
    image: node:14-alpine
    commands:
      - npm install
      - npm run build

  - name: deploy-to-aws
    image: node:14-alpine
    environment:
      AWS_ACCESS_KEY_ID:
        from_secret: AWS_ACCESS_KEY_ID
      AWS_SECRET_ACCESS_KEY:
        from_secret: AWS_SECRET_ACCESS_KEY
    commands:
      - npm install -g serverless
      - export AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID
      - export AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY
      - serverless
    depends_on:
      - build-prod

  - name: lighthouse-ci
    image: cypress/browsers:node14.15.0-chrome86-ff82
    commands:
      - npm install -g @lhci/cli@0.8.x
      - lhci autorun || echo "LHCI failed!"
    depends_on:
      - deploy-to-aws

  - name: upload-lighthouse-reports-s3
    image: amazon/aws-cli
    environment:
      AWS_ACCESS_KEY_ID:
        from_secret: AWS_ACCESS_KEY_ID
      AWS_SECRET_ACCESS_KEY:
        from_secret: AWS_SECRET_ACCESS_KEY
      AWS_LIGHTHOUSE_REPORTS_BUCKET_NAME:
        from_secret: AWS_LIGHTHOUSE_REPORTS_BUCKET_NAME
      AWS_LIGHTHOUSE_REPORTS_BUCKET_REGION:
        from_secret: AWS_LIGHTHOUSE_REPORTS_BUCKET_REGION
    commands:
      - aws s3 sync lhci s3://$AWS_LIGHTHOUSE_REPORTS_BUCKET_NAME --region $AWS_LIGHTHOUSE_REPORTS_BUCKET_REGION
    depends_on:
      - lighthouse-ci

trigger:
  branch:
    - main
  event:
    - push
